{
  "README.html": {
    "href": "README.html",
    "title": "CasCore | CasCore",
    "keywords": "CasCore Assembly-level sandboxing and Code Access Security for .NET Core CasCore allows for securely executing untrusted C# code in an application. When loading an assembly, CasCore modifies the assembly's bytecode to add security checks. These checks prevent the assembly from violating memory safety or accessing resources without permission. Any assembly loaded with CasCore is subject to the following restrictions: The CIL bytecode of the assembly's methods must be valid and verifiable. Any unverifiable method will throw a TypeInitializationException when called. The assembly may only access a field if it exists within the same assembly, another assembly in the same AssemblyLoadContext, or on the assembly's CasPolicy whitelist. Any attempt to read/write an inaccessible field fails with a System.SecurityException. The assembly may only call a method if it exists within the same assembly, another assembly in the same AssemblyLoadContext, or on the assembly's CasPolicy whitelist. Attempts to call inaccessible methods also fail with an exception. The assembly may only use reflection APIs to access allowed fields/methods. Attempts with reflection to access invalid fields/methods (according to the same rules as above) also fail with an exception. The assembly may only create delegates for allowed methods; attempts to create delegates for invalid methods also fail with an exception. The assembly may only use LambdaExpression.Compile for expression trees with allowed fields/methods; attempts to create and execute expression trees with invalid methods also fail with an exception. CasCore is meant as a replacement for Code Access Security (CAS), which was deprecated in .NET Core. CasCore was designed primarily for game modding/plugin systems, which may download third-party mods onto a user's computer. CasCore can prevent mods from performing malicious actions like writing to the filesystem or accessing the network. Installation CasCore can be obtained as a Nuget package. Either run dotnet add package DouglasDwyer.CasCore via the command line, or download the library from the Visual Studio package manager. How to use Sandboxing assemblies with CasCore involves two steps: defining a CasPolicy, then loading assemblies under that policy. The CasPolicy defines a whitelist of fields and methods that sandboxed assemblies may access. Any external member accesses not explicitly on the policy whitelist will fail with a System.SecurityException. Policies are created using the CasPolicyBuilder class: var policy = new CasPolicyBuilder() // Create a new, empty whitelist. .WithDefaultSandbox() // Add all system types that are on the default whitelist .Allow(new TypeBinding(typeof(FullyAccessibleClass), Accessibility.Private)) // This class will be fully accessible .Allow(new TypeBinding(typeof(InheritableAccessibleClass), Accessibility.Protected)) // Public/protected members only .Allow(new TypeBinding(typeof(PublicAccessibleClass), Accessibility.Public)) // Public members only .Allow(new TypeBinding(typeof(PartiallyAccessibleClass), Accessibility.None) // Only the following members .WithConstructor([], Accessibility.Public) .WithField(\"AllowedStaticField\", Accessibility.Public) .WithField(\"AllowedField\", Accessibility.Public) .WithMethod(\"InterfaceMethod\", Accessibility.Public)) .Allow(new AssemblyBinding(Assembly.Load(\"SomeAssembly\"), Accessibility.Protected)) // All public/protected members of assembly .Build(); // Generate the final policy After a policy has been defined, it can be used with a CasAssemblyLoader. Any assemblies created using the loader will be subject to the policy: var loadContext = new CasAssemblyLoader(policy); var assembly = loadContext.LoadFromAssemblyPath(\"Newtonsoft.Json.dll\"); // The types in assembly can only access external code if it is whitelisted OR if that code was loaded with the same loader Default sandbox policy CasPolicyBuilder comes with extension methods (most notably WithDefaultSandbox) that add members from the C# standard library. These methods are meant to whitelist as much of the C# standard library as possible, excluding any methods that: Cause undefined behavior (such as the Unsafe class or intrinsics) Access the filesystem Access the network Access other OS-specific resources (such as processes or pipes) Allow for loading other code without verification (such as System.Reflection.Emit) The WithDefaultSandbox method should provide a sensible default whitelist that ensures any loaded assemblies cannot gain access to the host system. Testing reveals that the netstandard version of Newtonsoft.Json is able to run with the default sandbox policy, so it should be fairly comprehensive. How it works This library has three main components: CIL verification - before a sandboxed assembly is loaded, it is modified using Mono.Cecil. Some \"guard\" CIL instructions are inserted at the beginning of each method in the assembly. When such a method is called for the first time, the guard instructions cause a fork of Microsoft's ILVerify to run on the method bytecode. The validity of the bytecode is checked and an error is raised if the bytecode does not conform to the CLR ECMA standard. Insertion of runtime checks - next, the bytecode of each method is scanned with Cecil. A runtime check is inserted before any external field access or method call (this includes virtual method calls and the creation of delegates). The check causes an exception to be thrown if the assembly does not have permission to access the member. The runtime checks are designed so that the JIT will compile them out if the member is both accessible and non-virtual. Calls to shims - finally, calls to reflection-related APIs (such as System.Activator.CreateInstance or System.Reflection.MethodInfo.Invoke) are replaced with calls to shims. These shims perform a runtime check to ensure that the reflected member is accessible. If not, an exception is thrown. Testing Included in this repository are a set of unit tests to demonstrate the system's functionality. The unit tests show that things like causing memory unsafety or accessing the file system are impossible under the default sandbox policy. Contributions and pull requests to test/address any remaining security vulnerabilities are appreciated."
  },
  "api/DouglasDwyer.CasCore.Accessibility.html": {
    "href": "api/DouglasDwyer.CasCore.Accessibility.html",
    "title": "Enum Accessibility | CasCore",
    "keywords": "Enum Accessibility Identifies a member of subset of members by their external visibility. Namespace: DouglasDwyer.CasCore Assembly: CasCore.dll Syntax public enum Accessibility Fields Name Description None Identifies no members. Private Identifies all members. Protected Identifies all public or family members. Public Identifies all public members."
  },
  "api/DouglasDwyer.CasCore.AssemblyBinding.html": {
    "href": "api/DouglasDwyer.CasCore.AssemblyBinding.html",
    "title": "Class AssemblyBinding | CasCore",
    "keywords": "Class AssemblyBinding Facilitates selecting members of an assembly to include in a CasPolicy. Inheritance object AssemblyBinding Implements IEnumerable<MemberInfo> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: DouglasDwyer.CasCore Assembly: CasCore.dll Syntax public sealed class AssemblyBinding : IEnumerable<MemberInfo>, IEnumerable Constructors | Edit this page View Source AssemblyBinding(Assembly, Accessibility) Creates a new binding that selects all members with the provided visibility in the assembly. Declaration public AssemblyBinding(Assembly assembly, Accessibility accessibility) Parameters Type Name Description Assembly assembly The assembly containing types to include. Accessibility accessibility Which subset of members should be visible. Methods | Edit this page View Source GetEnumerator() Returns an enumerator that iterates through the collection. Declaration public IEnumerator<MemberInfo> GetEnumerator() Returns Type Description IEnumerator<MemberInfo> An enumerator that can be used to iterate through the collection. Implements IEnumerable<T> IEnumerable"
  },
  "api/DouglasDwyer.CasCore.CasAssemblyLoader.html": {
    "href": "api/DouglasDwyer.CasCore.CasAssemblyLoader.html",
    "title": "Class CasAssemblyLoader | CasCore",
    "keywords": "Class CasAssemblyLoader Provides scoped assembly loading with the same semantics as AssemblyLoadContext. Any assemblies loaded with this context will be subject to its CasPolicy, and any attempts to access unwhitelisted external fields/methods will throw exceptions. Inheritance object VerifiableAssemblyLoader CasAssemblyLoader Inherited Members VerifiableAssemblyLoader.LoadFromAssemblyName(AssemblyName) VerifiableAssemblyLoader.LoadFromStream(Stream) VerifiableAssemblyLoader.LoadFromAssemblyPath(string) VerifiableAssemblyLoader.SetProfileOptimizationRoot(string) VerifiableAssemblyLoader.StartProfileOptimization(string) VerifiableAssemblyLoader.Unload() VerifiableAssemblyLoader.LoadUnmanagedDll(string) VerifiableAssemblyLoader.LoadUnmanagedDllFromPath(string) VerifiableAssemblyLoader.IsCollectible VerifiableAssemblyLoader.Name VerifiableAssemblyLoader.Resolving VerifiableAssemblyLoader.ResolvingUnmanagedDll VerifiableAssemblyLoader.Unloading object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DouglasDwyer.CasCore Assembly: CasCore.dll Syntax public class CasAssemblyLoader : VerifiableAssemblyLoader Constructors | Edit this page View Source CasAssemblyLoader(CasPolicy) Creates a new loader with the given policy. Declaration public CasAssemblyLoader(CasPolicy policy) Parameters Type Name Description CasPolicy policy The policy that will apply to any assemblies created with this loader. | Edit this page View Source CasAssemblyLoader(CasPolicy, bool) Creates a new loader with the given policy. Declaration public CasAssemblyLoader(CasPolicy policy, bool isCollectible) Parameters Type Name Description CasPolicy policy The policy that will apply to any assemblies created with this loader. bool isCollectible Whether this context should be able to unload. | Edit this page View Source CasAssemblyLoader(CasPolicy, string, bool) Creates a new loader with the given policy. Declaration public CasAssemblyLoader(CasPolicy policy, string name, bool isCollectible) Parameters Type Name Description CasPolicy policy The policy that will apply to any assemblies created with this loader. string name The display name of the load context. bool isCollectible Whether this context should be able to unload. Methods | Edit this page View Source InstrumentAssembly(AssemblyDefinition) Adds verification guards to all methods in the assembly. The first time that any method is invoked, it will call the verifier on itself. Declaration protected override void InstrumentAssembly(AssemblyDefinition assembly) Parameters Type Name Description AssemblyDefinition assembly The assembly to instrument. Overrides VerifiableAssemblyLoader.InstrumentAssembly(AssemblyDefinition) | Edit this page View Source Load(AssemblyName) When overridden in a derived class, allows an assembly to be resolved based on its AssemblyName. Declaration protected override Assembly? Load(AssemblyName assemblyName) Parameters Type Name Description AssemblyName assemblyName The object that describes the assembly to be resolved. Returns Type Description Assembly The resolved assembly, or null. Overrides VerifiableAssemblyLoader.Load(AssemblyName) | Edit this page View Source LoadFromStream(Stream, Stream?) Loads the assembly with a common object file format (COFF)-based image containing a managed assembly, optionally including symbols for the assembly. Declaration public override Assembly LoadFromStream(Stream assembly, Stream? assemblySymbols) Parameters Type Name Description Stream assembly A byte array that is a COFF-based image containing a managed assembly. Stream assemblySymbols A byte array that contains the raw bytes representing the symbols for the assembly. Returns Type Description Assembly The loaded assembly. Overrides VerifiableAssemblyLoader.LoadFromStream(Stream, Stream)"
  },
  "api/DouglasDwyer.CasCore.CasPolicy.html": {
    "href": "api/DouglasDwyer.CasCore.CasPolicy.html",
    "title": "Class CasPolicy | CasCore",
    "keywords": "Class CasPolicy Defines a set of whitelisted fields and methods that sandboxed assemblies may access. Inheritance object CasPolicy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: DouglasDwyer.CasCore Assembly: CasCore.dll Syntax public sealed class CasPolicy"
  },
  "api/DouglasDwyer.CasCore.CasPolicyBuilder.html": {
    "href": "api/DouglasDwyer.CasCore.CasPolicyBuilder.html",
    "title": "Class CasPolicyBuilder | CasCore",
    "keywords": "Class CasPolicyBuilder Allows for specifying the list of fields and methods that a sandboxed assembly may access. Inheritance object CasPolicyBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: DouglasDwyer.CasCore Assembly: CasCore.dll Syntax public sealed class CasPolicyBuilder Constructors | Edit this page View Source CasPolicyBuilder() Creates a new policy builder. By default, all access to external APIs is denied. Declaration public CasPolicyBuilder() Methods | Edit this page View Source Allow(IEnumerable<MemberInfo>) Allows the given set of members to be accessed by sandboxed assemblies. Declaration public CasPolicyBuilder Allow(IEnumerable<MemberInfo> members) Parameters Type Name Description IEnumerable<MemberInfo> members The members to allow. Returns Type Description CasPolicyBuilder This builder, with the additional members added. | Edit this page View Source Allow(MemberInfo) Allows the given member to be accessed by sandboxed assemblies. Declaration public CasPolicyBuilder Allow(MemberInfo member) Parameters Type Name Description MemberInfo member The member to allow. Returns Type Description CasPolicyBuilder This builder, with the additional member added. | Edit this page View Source Build() Bakes the list of accessible members into a CasPolicy that may be used to instantiate assemblies. Declaration public CasPolicy Build() Returns Type Description CasPolicy The policy that was generated. | Edit this page View Source Deny(IEnumerable<MemberInfo>) Prevents the given members from being accessed by sandboxed assemblies. Declaration public CasPolicyBuilder Deny(IEnumerable<MemberInfo> members) Parameters Type Name Description IEnumerable<MemberInfo> members The members to deny. Returns Type Description CasPolicyBuilder This builder, with any relevant members removed if they were present. | Edit this page View Source Deny(MemberInfo) Prevents the given member from being accessed by sandboxed assemblies. Declaration public CasPolicyBuilder Deny(MemberInfo member) Parameters Type Name Description MemberInfo member The member to deny. Returns Type Description CasPolicyBuilder This builder, with the member removed if it was present. Extension Methods CasPolicyBuilderExtensions.WithDefaultSandbox(CasPolicyBuilder) CasPolicyBuilderExtensions.WithSandboxedRuntimeReflection(CasPolicyBuilder) CasPolicyBuilderExtensions.WithSandboxedSystem(CasPolicyBuilder) CasPolicyBuilderExtensions.WithSandboxedSystemCollections(CasPolicyBuilder) CasPolicyBuilderExtensions.WithSandboxedSystemCollectionsConcurrent(CasPolicyBuilder) CasPolicyBuilderExtensions.WithSandboxedSystemCollectionsImmutable(CasPolicyBuilder) CasPolicyBuilderExtensions.WithSandboxedSystemCollectionsNonGeneric(CasPolicyBuilder) CasPolicyBuilderExtensions.WithSandboxedSystemCollectionsSpecialized(CasPolicyBuilder) CasPolicyBuilderExtensions.WithSandboxedSystemComponentModelTypeConverter(CasPolicyBuilder) CasPolicyBuilderExtensions.WithSandboxedSystemConsole(CasPolicyBuilder) CasPolicyBuilderExtensions.WithSandboxedSystemDiagnosticsDiagnosticSource(CasPolicyBuilder) CasPolicyBuilderExtensions.WithSandboxedSystemLinq(CasPolicyBuilder) CasPolicyBuilderExtensions.WithSandboxedSystemLinqExpressions(CasPolicyBuilder) CasPolicyBuilderExtensions.WithSandboxedSystemLinqParallel(CasPolicyBuilder) CasPolicyBuilderExtensions.WithSandboxedSystemLinqQueryable(CasPolicyBuilder) CasPolicyBuilderExtensions.WithSandboxedSystemObjectModel(CasPolicyBuilder) CasPolicyBuilderExtensions.WithSandboxedSystemReflectionTypeExtensions(CasPolicyBuilder) CasPolicyBuilderExtensions.WithSandboxedSystemRuntimeNumerics(CasPolicyBuilder) CasPolicyBuilderExtensions.WithSandboxedSystemRuntimeSerializationFormatters(CasPolicyBuilder) CasPolicyBuilderExtensions.WithSandboxedSystemTextJson(CasPolicyBuilder) CasPolicyBuilderExtensions.WithSandboxedSystemTextRegularExpressions(CasPolicyBuilder) CasPolicyBuilderExtensions.WithSandboxedSystemThreading(CasPolicyBuilder) CasPolicyBuilderExtensions.WithSandboxedSystemThreadingChannels(CasPolicyBuilder) CasPolicyBuilderExtensions.WithSandboxedSystemThreadingTasksDataflow(CasPolicyBuilder) CasPolicyBuilderExtensions.WithSandboxedSystemThreadingTasksParallel(CasPolicyBuilder)"
  },
  "api/DouglasDwyer.CasCore.CasPolicyBuilderExtensions.html": {
    "href": "api/DouglasDwyer.CasCore.CasPolicyBuilderExtensions.html",
    "title": "Class CasPolicyBuilderExtensions | CasCore",
    "keywords": "Class CasPolicyBuilderExtensions Provides a set of methods for whitelisting C# standard library members. Inheritance object CasPolicyBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DouglasDwyer.CasCore Assembly: CasCore.dll Syntax public static class CasPolicyBuilderExtensions Methods | Edit this page View Source WithDefaultSandbox(CasPolicyBuilder) Adds a safe subset of the C# standard library to the policy. The aim of this method is to provide a sensible default whitelist that ensures any loaded assemblies cannot gain access to the host system. Specifically, the following APIs are excluded from this whitelist: Cause undefined behavior Access the filesystem Access the network Access other OS-specific resources (such as processes or pipes) Allow for loading other code without verification (such as System.Reflection.Emit) Declaration public static CasPolicyBuilder WithDefaultSandbox(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder. | Edit this page View Source WithSandboxedRuntimeReflection(CasPolicyBuilder) Adds all safe members from the runtime reflection system, such as System.RuntimeType. Declaration public static CasPolicyBuilder WithSandboxedRuntimeReflection(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder. | Edit this page View Source WithSandboxedSystem(CasPolicyBuilder) Adds all safe members from the CoreLib assembly. Declaration public static CasPolicyBuilder WithSandboxedSystem(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder. | Edit this page View Source WithSandboxedSystemCollections(CasPolicyBuilder) Adds all safe members from the System.Collections assembly. Declaration public static CasPolicyBuilder WithSandboxedSystemCollections(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder. | Edit this page View Source WithSandboxedSystemCollectionsConcurrent(CasPolicyBuilder) Adds all safe members from the System.Collections.Concurrent assembly. Declaration public static CasPolicyBuilder WithSandboxedSystemCollectionsConcurrent(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder. | Edit this page View Source WithSandboxedSystemCollectionsImmutable(CasPolicyBuilder) Adds all safe members from the System.Collections.Immutable assembly. Declaration public static CasPolicyBuilder WithSandboxedSystemCollectionsImmutable(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder. | Edit this page View Source WithSandboxedSystemCollectionsNonGeneric(CasPolicyBuilder) Adds all safe members from the System.Collections.NonGeneric assembly. Declaration public static CasPolicyBuilder WithSandboxedSystemCollectionsNonGeneric(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder. | Edit this page View Source WithSandboxedSystemCollectionsSpecialized(CasPolicyBuilder) Adds all safe members from the System.Collections.Specialized assembly. Declaration public static CasPolicyBuilder WithSandboxedSystemCollectionsSpecialized(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder. | Edit this page View Source WithSandboxedSystemComponentModelTypeConverter(CasPolicyBuilder) Adds all safe members from the System.ComponentModel.TypeConverter assembly. Declaration public static CasPolicyBuilder WithSandboxedSystemComponentModelTypeConverter(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder. | Edit this page View Source WithSandboxedSystemConsole(CasPolicyBuilder) Adds all safe members from the System.Console assembly. Declaration public static CasPolicyBuilder WithSandboxedSystemConsole(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder. | Edit this page View Source WithSandboxedSystemDiagnosticsDiagnosticSource(CasPolicyBuilder) Adds all safe members from the System.Diagnostics.DiagnosticSource assembly. Declaration public static CasPolicyBuilder WithSandboxedSystemDiagnosticsDiagnosticSource(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder. | Edit this page View Source WithSandboxedSystemLinq(CasPolicyBuilder) Adds all safe members from the System.Linq assembly. Declaration public static CasPolicyBuilder WithSandboxedSystemLinq(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder. | Edit this page View Source WithSandboxedSystemLinqExpressions(CasPolicyBuilder) Adds all safe members from the System.Linq.Expressions assembly. Declaration public static CasPolicyBuilder WithSandboxedSystemLinqExpressions(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder. | Edit this page View Source WithSandboxedSystemLinqParallel(CasPolicyBuilder) Adds all safe members from the System.Linq.Parallel assembly. Declaration public static CasPolicyBuilder WithSandboxedSystemLinqParallel(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder. | Edit this page View Source WithSandboxedSystemLinqQueryable(CasPolicyBuilder) Adds all safe members from the .System.Linq.Queryable assembly. Declaration public static CasPolicyBuilder WithSandboxedSystemLinqQueryable(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder. | Edit this page View Source WithSandboxedSystemObjectModel(CasPolicyBuilder) Adds all safe members from the System.ObjectModel assembly. Declaration public static CasPolicyBuilder WithSandboxedSystemObjectModel(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder. | Edit this page View Source WithSandboxedSystemReflectionTypeExtensions(CasPolicyBuilder) Adds all safe members from the System.Reflection.TypeExtensions assembly. Declaration public static CasPolicyBuilder WithSandboxedSystemReflectionTypeExtensions(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder. | Edit this page View Source WithSandboxedSystemRuntimeNumerics(CasPolicyBuilder) Adds all safe members from the System.Runtime.Numerics assembly. Declaration public static CasPolicyBuilder WithSandboxedSystemRuntimeNumerics(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder. | Edit this page View Source WithSandboxedSystemRuntimeSerializationFormatters(CasPolicyBuilder) Adds all safe members from the System.Runtime.SerializationFormatters assembly. Declaration public static CasPolicyBuilder WithSandboxedSystemRuntimeSerializationFormatters(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder. | Edit this page View Source WithSandboxedSystemTextJson(CasPolicyBuilder) Adds all safe members from the System.Text.Json assembly. Declaration public static CasPolicyBuilder WithSandboxedSystemTextJson(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder. | Edit this page View Source WithSandboxedSystemTextRegularExpressions(CasPolicyBuilder) Adds all safe members from the System.Text.RegularExpressions assembly. Declaration public static CasPolicyBuilder WithSandboxedSystemTextRegularExpressions(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder. | Edit this page View Source WithSandboxedSystemThreading(CasPolicyBuilder) Adds all safe members from the System.Threading assembly. Declaration public static CasPolicyBuilder WithSandboxedSystemThreading(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder. | Edit this page View Source WithSandboxedSystemThreadingChannels(CasPolicyBuilder) Adds all safe members from the System.Threading.Channels assembly. Declaration public static CasPolicyBuilder WithSandboxedSystemThreadingChannels(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder. | Edit this page View Source WithSandboxedSystemThreadingTasksDataflow(CasPolicyBuilder) Adds all safe members from the System.Threading.Tasks.Dataflow assembly. Declaration public static CasPolicyBuilder WithSandboxedSystemThreadingTasksDataflow(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder. | Edit this page View Source WithSandboxedSystemThreadingTasksParallel(CasPolicyBuilder) Adds all safe members from the System.Threading.Tasks.Parallel assembly. Declaration public static CasPolicyBuilder WithSandboxedSystemThreadingTasksParallel(this CasPolicyBuilder builder) Parameters Type Name Description CasPolicyBuilder builder The builder to which members should be added. Returns Type Description CasPolicyBuilder The modified builder."
  },
  "api/DouglasDwyer.CasCore.Tests.Shared.ISharedInterface.html": {
    "href": "api/DouglasDwyer.CasCore.Tests.Shared.ISharedInterface.html",
    "title": "Interface ISharedInterface | CasCore",
    "keywords": "Interface ISharedInterface Namespace: DouglasDwyer.CasCore.Tests.Shared Assembly: CasCore.Tests.Shared.dll Syntax public interface ISharedInterface Methods | Edit this page View Source InterfaceMethod<T>(T) Declaration T InterfaceMethod<T>(T input) Parameters Type Name Description T input Returns Type Description T Type Parameters Name Description T"
  },
  "api/DouglasDwyer.CasCore.Tests.Shared.SharedClass.SharedNested.html": {
    "href": "api/DouglasDwyer.CasCore.Tests.Shared.SharedClass.SharedNested.html",
    "title": "Class SharedClass.SharedNested | CasCore",
    "keywords": "Class SharedClass.SharedNested Inheritance object SharedClass SharedClass.SharedNested Implements ISharedInterface Inherited Members SharedClass.AllowedStaticField SharedClass.DeniedStaticField SharedClass.AllowedField SharedClass.DeniedField SharedClass.DeniedProperty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DouglasDwyer.CasCore.Tests.Shared Assembly: CasCore.Tests.Shared.dll Syntax public class SharedClass.SharedNested : SharedClass, ISharedInterface Methods | Edit this page View Source InterfaceMethod<T>(T) Declaration public T InterfaceMethod<T>(T input) Parameters Type Name Description T input Returns Type Description T Type Parameters Name Description T | Edit this page View Source VirtualMethod() Declaration public override void VirtualMethod() Overrides SharedClass.VirtualMethod() Implements ISharedInterface"
  },
  "api/DouglasDwyer.CasCore.Tests.Shared.SharedClass.html": {
    "href": "api/DouglasDwyer.CasCore.Tests.Shared.SharedClass.html",
    "title": "Class SharedClass | CasCore",
    "keywords": "Class SharedClass Inheritance object SharedClass SharedClass.SharedNested Implements ISharedInterface Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DouglasDwyer.CasCore.Tests.Shared Assembly: CasCore.Tests.Shared.dll Syntax public class SharedClass : ISharedInterface Constructors | Edit this page View Source SharedClass() Declaration public SharedClass() | Edit this page View Source SharedClass(string) Declaration public SharedClass(string denied) Parameters Type Name Description string denied Fields | Edit this page View Source AllowedField Declaration public int AllowedField Field Value Type Description int | Edit this page View Source AllowedStaticField Declaration public static int AllowedStaticField Field Value Type Description int | Edit this page View Source DeniedField Declaration public int DeniedField Field Value Type Description int | Edit this page View Source DeniedStaticField Declaration public static int DeniedStaticField Field Value Type Description int Properties | Edit this page View Source DeniedProperty Declaration public int DeniedProperty { get; } Property Value Type Description int Methods | Edit this page View Source InterfaceMethod<T>(T) Declaration public T InterfaceMethod<T>(T input) Parameters Type Name Description T input Returns Type Description T Type Parameters Name Description T | Edit this page View Source VirtualMethod() Declaration public virtual void VirtualMethod() Implements ISharedInterface"
  },
  "api/DouglasDwyer.CasCore.Tests.Shared.html": {
    "href": "api/DouglasDwyer.CasCore.Tests.Shared.html",
    "title": "Namespace DouglasDwyer.CasCore.Tests.Shared | CasCore",
    "keywords": "Namespace DouglasDwyer.CasCore.Tests.Shared Classes SharedClass SharedClass.SharedNested Interfaces ISharedInterface"
  },
  "api/DouglasDwyer.CasCore.Tests.TestDelegateCreation.html": {
    "href": "api/DouglasDwyer.CasCore.Tests.TestDelegateCreation.html",
    "title": "Class TestDelegateCreation | CasCore",
    "keywords": "Class TestDelegateCreation Inheritance object TestDelegateCreation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DouglasDwyer.CasCore.Tests Assembly: CasCore.Tests.dll Syntax public static class TestDelegateCreation Methods | Edit this page View Source TestHarmless() Declaration public static void TestHarmless() | Edit this page View Source TestWriteFile() Declaration [TestException(typeof(SecurityException))] public static void TestWriteFile() | Edit this page View Source TestWriteFileCreateDelegate() Declaration [TestException(typeof(SecurityException))] public static void TestWriteFileCreateDelegate()"
  },
  "api/DouglasDwyer.CasCore.Tests.TestExceptionAttribute.html": {
    "href": "api/DouglasDwyer.CasCore.Tests.TestExceptionAttribute.html",
    "title": "Class TestExceptionAttribute | CasCore",
    "keywords": "Class TestExceptionAttribute Inheritance object Attribute TestExceptionAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DouglasDwyer.CasCore.Tests Assembly: CasCore.Tests.dll Syntax public class TestExceptionAttribute : Attribute Constructors | Edit this page View Source TestExceptionAttribute(Type) Declaration public TestExceptionAttribute(Type exception) Parameters Type Name Description Type exception Properties | Edit this page View Source ExpectedException Declaration public Type ExpectedException { get; } Property Value Type Description Type"
  },
  "api/DouglasDwyer.CasCore.Tests.TestFileAccess.html": {
    "href": "api/DouglasDwyer.CasCore.Tests.TestFileAccess.html",
    "title": "Class TestFileAccess | CasCore",
    "keywords": "Class TestFileAccess Inheritance object TestFileAccess Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DouglasDwyer.CasCore.Tests Assembly: CasCore.Tests.dll Syntax public static class TestFileAccess Methods | Edit this page View Source TestEnvironmentGetCommandLineArgs() Declaration [TestException(typeof(SecurityException))] public static void TestEnvironmentGetCommandLineArgs() | Edit this page View Source TestEnvironmentGetFolderPath() Declaration [TestException(typeof(SecurityException))] public static void TestEnvironmentGetFolderPath() | Edit this page View Source TestEnvironmentGetLogicalDrives() Declaration [TestException(typeof(SecurityException))] public static void TestEnvironmentGetLogicalDrives() | Edit this page View Source TestEnvironmentProcessPath() Declaration [TestException(typeof(SecurityException))] public static void TestEnvironmentProcessPath() | Edit this page View Source TestReadFile() Declaration [TestException(typeof(SecurityException))] public static void TestReadFile() | Edit this page View Source TestStreamReaderFileConstructor1() Declaration [TestException(typeof(SecurityException))] public static void TestStreamReaderFileConstructor1() | Edit this page View Source TestStreamReaderFileConstructor2() Declaration [TestException(typeof(SecurityException))] public static void TestStreamReaderFileConstructor2() | Edit this page View Source TestStreamReaderFileConstructor3() Declaration [TestException(typeof(SecurityException))] public static void TestStreamReaderFileConstructor3() | Edit this page View Source TestStreamReaderOtherConstructors() Declaration public static void TestStreamReaderOtherConstructors() | Edit this page View Source TestStreamWriterFileConstructor1() Declaration [TestException(typeof(SecurityException))] public static void TestStreamWriterFileConstructor1() | Edit this page View Source TestStreamWriterFileConstructor2() Declaration [TestException(typeof(SecurityException))] public static void TestStreamWriterFileConstructor2() | Edit this page View Source TestStreamWriterFileConstructor3() Declaration [TestException(typeof(SecurityException))] public static void TestStreamWriterFileConstructor3() | Edit this page View Source TestStreamWriterOtherConstructors() Declaration public static void TestStreamWriterOtherConstructors() | Edit this page View Source TestWriteFile() Declaration [TestException(typeof(SecurityException))] public static void TestWriteFile() | Edit this page View Source TestZipFileCreateFromDirectory() Declaration [TestException(typeof(SecurityException))] public static void TestZipFileCreateFromDirectory()"
  },
  "api/DouglasDwyer.CasCore.Tests.TestMemberAccess.html": {
    "href": "api/DouglasDwyer.CasCore.Tests.TestMemberAccess.html",
    "title": "Class TestMemberAccess | CasCore",
    "keywords": "Class TestMemberAccess Inheritance object TestMemberAccess Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DouglasDwyer.CasCore.Tests Assembly: CasCore.Tests.dll Syntax public static class TestMemberAccess Methods | Edit this page View Source TestAccessAllowed() Declaration public static void TestAccessAllowed() | Edit this page View Source TestAccessAllowedConstructor() Declaration public static void TestAccessAllowedConstructor() | Edit this page View Source TestAccessAllowedInterfaceMethod() Declaration public static void TestAccessAllowedInterfaceMethod() | Edit this page View Source TestAccessAllowedStatic() Declaration public static void TestAccessAllowedStatic() | Edit this page View Source TestAccessAllowedVirtualMethod() Declaration public static void TestAccessAllowedVirtualMethod() | Edit this page View Source TestAccessDenied() Declaration [TestException(typeof(SecurityException))] public static void TestAccessDenied() | Edit this page View Source TestAccessDeniedConstructor() Declaration [TestException(typeof(SecurityException))] public static void TestAccessDeniedConstructor() | Edit this page View Source TestAccessDeniedInterfaceMethod() Declaration [TestException(typeof(SecurityException))] public static void TestAccessDeniedInterfaceMethod() | Edit this page View Source TestAccessDeniedStatic() Declaration [TestException(typeof(SecurityException))] public static void TestAccessDeniedStatic() | Edit this page View Source TestAccessDeniedVirtualMethod() Declaration [TestException(typeof(SecurityException))] public static void TestAccessDeniedVirtualMethod()"
  },
  "api/DouglasDwyer.CasCore.Tests.TestMemorySafety.html": {
    "href": "api/DouglasDwyer.CasCore.Tests.TestMemorySafety.html",
    "title": "Class TestMemorySafety | CasCore",
    "keywords": "Class TestMemorySafety Inheritance object TestMemorySafety Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DouglasDwyer.CasCore.Tests Assembly: CasCore.Tests.dll Syntax public static class TestMemorySafety Methods | Edit this page View Source TestEmit() Declaration [TestException(typeof(SecurityException))] public static void TestEmit() | Edit this page View Source TestGcAllocateArray() Declaration public static void TestGcAllocateArray() | Edit this page View Source TestGcAllocateUninitArray() Declaration [TestException(typeof(SecurityException))] public static void TestGcAllocateUninitArray() | Edit this page View Source TestInvalidPointerRead() Declaration [TestException(typeof(TypeInitializationException))] public static void TestInvalidPointerRead() | Edit this page View Source TestInvalidPointerWrite() Declaration [TestException(typeof(TypeInitializationException))] public static void TestInvalidPointerWrite() | Edit this page View Source TestInvalidStackalloc() Declaration [TestException(typeof(TypeInitializationException))] public static void TestInvalidStackalloc() | Edit this page View Source TestRefRead() Declaration public static int TestRefRead() Returns Type Description int | Edit this page View Source TestRefWrite() Declaration public static int TestRefWrite() Returns Type Description int | Edit this page View Source TestRuntimeHelpersGetUninitObject() Declaration [TestException(typeof(SecurityException))] public static void TestRuntimeHelpersGetUninitObject() | Edit this page View Source TestUnsafe() Declaration [TestException(typeof(SecurityException))] public static void TestUnsafe()"
  },
  "api/DouglasDwyer.CasCore.Tests.TestNewtonsoftJson.SerializableClass.html": {
    "href": "api/DouglasDwyer.CasCore.Tests.TestNewtonsoftJson.SerializableClass.html",
    "title": "Class TestNewtonsoftJson.SerializableClass | CasCore",
    "keywords": "Class TestNewtonsoftJson.SerializableClass Inheritance object TestNewtonsoftJson.SerializableClass Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DouglasDwyer.CasCore.Tests Assembly: CasCore.Tests.dll Syntax public class TestNewtonsoftJson.SerializableClass Properties | Edit this page View Source AllowedProperty Declaration public int AllowedProperty { get; } Property Value Type Description int"
  },
  "api/DouglasDwyer.CasCore.Tests.TestNewtonsoftJson.html": {
    "href": "api/DouglasDwyer.CasCore.Tests.TestNewtonsoftJson.html",
    "title": "Class TestNewtonsoftJson | CasCore",
    "keywords": "Class TestNewtonsoftJson Inheritance object TestNewtonsoftJson Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DouglasDwyer.CasCore.Tests Assembly: CasCore.Tests.dll Syntax public static class TestNewtonsoftJson Methods | Edit this page View Source SerializeJsonDictionary() Declaration public static string SerializeJsonDictionary() Returns Type Description string | Edit this page View Source SerializeObjectWithDeniedProperties() Declaration [TestException(typeof(SecurityException))] public static string SerializeObjectWithDeniedProperties() Returns Type Description string | Edit this page View Source SerializeSerializableClass() Declaration public static string SerializeSerializableClass() Returns Type Description string"
  },
  "api/DouglasDwyer.CasCore.Tests.TestRunner.html": {
    "href": "api/DouglasDwyer.CasCore.Tests.TestRunner.html",
    "title": "Class TestRunner | CasCore",
    "keywords": "Class TestRunner Inheritance object TestRunner Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DouglasDwyer.CasCore.Tests Assembly: CasCore.Tests.dll Syntax public class TestRunner Methods | Edit this page View Source Run() Declaration public static void Run()"
  },
  "api/DouglasDwyer.CasCore.Tests.TestSuccessfulAttribute.html": {
    "href": "api/DouglasDwyer.CasCore.Tests.TestSuccessfulAttribute.html",
    "title": "Class TestSuccessfulAttribute | CasCore",
    "keywords": "Class TestSuccessfulAttribute Inheritance object Attribute TestSuccessfulAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: DouglasDwyer.CasCore.Tests Assembly: CasCore.Tests.dll Syntax public class TestSuccessfulAttribute : Attribute"
  },
  "api/DouglasDwyer.CasCore.Tests.html": {
    "href": "api/DouglasDwyer.CasCore.Tests.html",
    "title": "Namespace DouglasDwyer.CasCore.Tests | CasCore",
    "keywords": "Namespace DouglasDwyer.CasCore.Tests Classes TestDelegateCreation TestExceptionAttribute TestFileAccess TestMemberAccess TestMemorySafety TestNewtonsoftJson TestNewtonsoftJson.SerializableClass TestRunner TestSuccessfulAttribute"
  },
  "api/DouglasDwyer.CasCore.TypeBinding.html": {
    "href": "api/DouglasDwyer.CasCore.TypeBinding.html",
    "title": "Class TypeBinding | CasCore",
    "keywords": "Class TypeBinding Facilitates selecting particular members of a type to include in a CasPolicy. Inheritance object TypeBinding Implements IEnumerable<MemberInfo> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: DouglasDwyer.CasCore Assembly: CasCore.dll Syntax public sealed class TypeBinding : IEnumerable<MemberInfo>, IEnumerable Constructors | Edit this page View Source TypeBinding(Type, Accessibility) Creates a new binding for members of the given type. This recursively includes members of nested classes that are visible under the given accessibility. Declaration public TypeBinding(Type type, Accessibility accessibility) Parameters Type Name Description Type type The target type. Accessibility accessibility The accessibility level of members. Methods | Edit this page View Source GetEnumerator() Returns an enumerator that iterates through the collection. Declaration public IEnumerator<MemberInfo> GetEnumerator() Returns Type Description IEnumerator<MemberInfo> An enumerator that can be used to iterate through the collection. | Edit this page View Source WithConstructor(Accessibility) Adds the constructor of the given accessibility to this binding. Declaration public TypeBinding WithConstructor(Accessibility accessibility) Parameters Type Name Description Accessibility accessibility The target member's accessibility. Returns Type Description TypeBinding This type binding, with the member added. Exceptions Type Condition ArgumentException If no member could be found. | Edit this page View Source WithConstructor(Type[], Accessibility) Adds the constructor with the given parameters and accessibility to this binding. Declaration public TypeBinding WithConstructor(Type[] parameters, Accessibility accessibility) Parameters Type Name Description Type[] parameters The parameters that the constructor accepts. Accessibility accessibility The target member's accessibility. Returns Type Description TypeBinding This type binding, with the member added. Exceptions Type Condition ArgumentException If no member could be found. | Edit this page View Source WithField(string, Accessibility) Adds the field with the given name and accessibility to this binding. Declaration public TypeBinding WithField(string name, Accessibility accessibility) Parameters Type Name Description string name The name of the member to add. Accessibility accessibility The target member's accessibility. Returns Type Description TypeBinding This type binding, with the member added. Exceptions Type Condition ArgumentException If no member could be found. | Edit this page View Source WithMethod(string, Accessibility) Adds the method with the given name and accessibility to this binding. Declaration public TypeBinding WithMethod(string name, Accessibility accessibility) Parameters Type Name Description string name The name of the member to add. Accessibility accessibility The target member's accessibility. Returns Type Description TypeBinding This type binding, with the member added. Exceptions Type Condition ArgumentException If no member could be found. | Edit this page View Source WithMethod(string, Type[], Accessibility) Adds the method with the given name and accessibility to this binding. Declaration public TypeBinding WithMethod(string name, Type[] parameters, Accessibility accessibility) Parameters Type Name Description string name The name of the member to add. Type[] parameters The parameters that the method accepts. Accessibility accessibility The target member's accessibility. Returns Type Description TypeBinding This type binding, with the member added. Exceptions Type Condition ArgumentException If no member could be found. Implements IEnumerable<T> IEnumerable"
  },
  "api/DouglasDwyer.CasCore.html": {
    "href": "api/DouglasDwyer.CasCore.html",
    "title": "Namespace DouglasDwyer.CasCore | CasCore",
    "keywords": "Namespace DouglasDwyer.CasCore Classes AssemblyBinding Facilitates selecting members of an assembly to include in a CasPolicy. CasAssemblyLoader Provides scoped assembly loading with the same semantics as AssemblyLoadContext. Any assemblies loaded with this context will be subject to its CasPolicy, and any attempts to access unwhitelisted external fields/methods will throw exceptions. CasPolicy Defines a set of whitelisted fields and methods that sandboxed assemblies may access. CasPolicyBuilder Allows for specifying the list of fields and methods that a sandboxed assembly may access. CasPolicyBuilderExtensions Provides a set of methods for whitelisting C# standard library members. TypeBinding Facilitates selecting particular members of a type to include in a CasPolicy. Enums Accessibility Identifies a member of subset of members by their external visibility."
  },
  "index.html": {
    "href": "index.html",
    "title": "CasCore | CasCore",
    "keywords": "CasCore Assembly-level sandboxing and Code Access Security for .NET Core CasCore allows for securely executing untrusted C# code in an application. When loading an assembly, CasCore modifies the assembly's bytecode to add security checks. These checks prevent the assembly from violating memory safety or accessing resources without permission. Any assembly loaded with CasCore is subject to the following restrictions: The CIL bytecode of the assembly's methods must be valid and verifiable. Any unverifiable method will throw a TypeInitializationException when called. The assembly may only access a field if it exists within the same assembly, another assembly in the same AssemblyLoadContext, or on the assembly's CasPolicy whitelist. Any attempt to read/write an inaccessible field fails with a System.SecurityException. The assembly may only call a method if it exists within the same assembly, another assembly in the same AssemblyLoadContext, or on the assembly's CasPolicy whitelist. Attempts to call inaccessible methods also fail with an exception. The assembly may only use reflection APIs to access allowed fields/methods. Attempts with reflection to access invalid fields/methods (according to the same rules as above) also fail with an exception. The assembly may only create delegates for allowed methods; attempts to create delegates for invalid methods also fail with an exception. The assembly may only use LambdaExpression.Compile for expression trees with allowed fields/methods; attempts to create and execute expression trees with invalid methods also fail with an exception. CasCore is meant as a replacement for Code Access Security (CAS), which was deprecated in .NET Core. CasCore was designed primarily for game modding/plugin systems, which may download third-party mods onto a user's computer. CasCore can prevent mods from performing malicious actions like writing to the filesystem or accessing the network. Installation CasCore can be obtained as a Nuget package. Either run dotnet add package DouglasDwyer.CasCore via the command line, or download the library from the Visual Studio package manager. How to use Sandboxing assemblies with CasCore involves two steps: defining a CasPolicy, then loading assemblies under that policy. The CasPolicy defines a whitelist of fields and methods that sandboxed assemblies may access. Any external member accesses not explicitly on the policy whitelist will fail with a System.SecurityException. Policies are created using the CasPolicyBuilder class: var policy = new CasPolicyBuilder() // Create a new, empty whitelist. .WithDefaultSandbox() // Add all system types that are on the default whitelist .Allow(new TypeBinding(typeof(FullyAccessibleClass), Accessibility.Private)) // This class will be fully accessible .Allow(new TypeBinding(typeof(InheritableAccessibleClass), Accessibility.Protected)) // Public/protected members only .Allow(new TypeBinding(typeof(PublicAccessibleClass), Accessibility.Public)) // Public members only .Allow(new TypeBinding(typeof(PartiallyAccessibleClass), Accessibility.None) // Only the following members .WithConstructor([], Accessibility.Public) .WithField(\"AllowedStaticField\", Accessibility.Public) .WithField(\"AllowedField\", Accessibility.Public) .WithMethod(\"InterfaceMethod\", Accessibility.Public)) .Allow(new AssemblyBinding(Assembly.Load(\"SomeAssembly\"), Accessibility.Protected)) // All public/protected members of assembly .Build(); // Generate the final policy After a policy has been defined, it can be used with a CasAssemblyLoader. Any assemblies created using the loader will be subject to the policy: var loadContext = new CasAssemblyLoader(policy); var assembly = loadContext.LoadFromAssemblyPath(\"Newtonsoft.Json.dll\"); // The types in assembly can only access external code if it is whitelisted OR if that code was loaded with the same loader Default sandbox policy CasPolicyBuilder comes with extension methods (most notably WithDefaultSandbox) that add members from the C# standard library. These methods are meant to whitelist as much of the C# standard library as possible, excluding any methods that: Cause undefined behavior (such as the Unsafe class or intrinsics) Access the filesystem Access the network Access other OS-specific resources (such as processes or pipes) Allow for loading other code without verification (such as System.Reflection.Emit) The WithDefaultSandbox method should provide a sensible default whitelist that ensures any loaded assemblies cannot gain access to the host system. Testing reveals that the netstandard version of Newtonsoft.Json is able to run with the default sandbox policy, so it should be fairly comprehensive. How it works This library has three main components: CIL verification - before a sandboxed assembly is loaded, it is modified using Mono.Cecil. Some \"guard\" CIL instructions are inserted at the beginning of each method in the assembly. When such a method is called for the first time, the guard instructions cause a fork of Microsoft's ILVerify to run on the method bytecode. The validity of the bytecode is checked and an error is raised if the bytecode does not conform to the CLR ECMA standard. Insertion of runtime checks - next, the bytecode of each method is scanned with Cecil. A runtime check is inserted before any external field access or method call (this includes virtual method calls and the creation of delegates). The check causes an exception to be thrown if the assembly does not have permission to access the member. The runtime checks are designed so that the JIT will compile them out if the member is both accessible and non-virtual. Calls to shims - finally, calls to reflection-related APIs (such as System.Activator.CreateInstance or System.Reflection.MethodInfo.Invoke) are replaced with calls to shims. These shims perform a runtime check to ensure that the reflected member is accessible. If not, an exception is thrown. Testing Included in this repository are a set of unit tests to demonstrate the system's functionality. The unit tests show that things like causing memory unsafety or accessing the file system are impossible under the default sandbox policy. Contributions and pull requests to test/address any remaining security vulnerabilities are appreciated."
  }
}